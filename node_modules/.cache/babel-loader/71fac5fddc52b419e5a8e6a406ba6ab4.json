{"ast":null,"code":"import { GET_USERS, DELETE_USER, ADD_USER, CHANGE_USER } from \"./types\";\nconst defaultState = {\n  users: []\n};\nexport const usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_USERS:\n      return { ...state,\n        users: [...state.users, ...action.payload]\n      };\n\n    case DELETE_USER:\n      return { ...state,\n        users: [...state.users.filter(item => item.id !== action.payload)]\n      };\n\n    case ADD_USER:\n      return { ...state,\n        users: [...state.users.concat(action.payload)]\n      };\n\n    case CHANGE_USER:\n      return { ...state,\n        users: [...state.users.map((item, arr) => {\n          if (item.id === action.payload.id) {\n            console.log(arr);\n            item = {\n              [item.name]: action.payload.name,\n              [item.email]: action.payload.email,\n              [item.id]: action.payload.id\n            };\n          }\n        })]\n      };\n\n    default:\n      return state;\n  }\n}; // [...state.users.map(item => {\n//   console.log(action.payload);\n//   if (item.id === action.payload.id) {\n//     let {name, email, id} = action.payload\n//     console.log(name);\n//     item = (action.payload)\n//   }\n// })]}\n// arr.copyWithin(action.payload, i, i + 1)","map":{"version":3,"sources":["/Users/demo/Desktop/takeoff/src/store/usersReducer.ts"],"names":["GET_USERS","DELETE_USER","ADD_USER","CHANGE_USER","defaultState","users","usersReducer","state","action","type","payload","filter","item","id","concat","map","arr","console","log","name","email"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,QAAjC,EAA2CC,WAA3C,QAA8D,SAA9D;AAWA,MAAMC,YAAuB,GAAG;AAC5BC,EAAAA,KAAK,EAAE;AADqB,CAAhC;AAIA,OAAO,MAAMC,YAAY,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,SAAL;AACE,aAAO,EAAC,GAAGO,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiB,GAAGG,MAAM,CAACE,OAA3B;AAAlB,OAAP;;AACF,SAAKT,WAAL;AACE,aAAO,EAAC,GAAGM,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYM,MAAZ,CAAmBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAA9C,CAAJ;AAAlB,OAAP;;AACF,SAAKR,QAAL;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYS,MAAZ,CAAmBN,MAAM,CAACE,OAA1B,CAAJ;AAAlB,OAAP;;AACF,SAAKP,WAAL;AACE,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAN,CAAYU,GAAZ,CAAgB,CAACH,IAAD,EAAOI,GAAP,KAAe;AAC1D,cAAIJ,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAP,CAAeG,EAA/B,EAAmC;AACjCI,YAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAJ,YAAAA,IAAI,GAAG;AACL,eAACA,IAAI,CAACO,IAAN,GAAaX,MAAM,CAACE,OAAP,CAAeS,IADvB;AAEL,eAACP,IAAI,CAACQ,KAAN,GAAcZ,MAAM,CAACE,OAAP,CAAeU,KAFxB;AAGL,eAACR,IAAI,CAACC,EAAN,GAAWL,MAAM,CAACE,OAAP,CAAeG;AAHrB,aAAP;AAKD;AACF,SAT4B,CAAJ;AAAlB,OAAP;;AAUF;AACE,aAAON,KAAP;AAnBJ;AAqBH,CAtBM,C,CAwBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import { GET_USERS, DELETE_USER, ADD_USER, CHANGE_USER } from \"./types\"\n\ninterface UserState {\n  users: any[]\n}\n\ninterface UserAction {\n  type: string;\n  payload: any[];\n}\n\nconst defaultState: UserState = {\n    users: []\n}\n\nexport const usersReducer = (state = defaultState, action) => {\n    switch (action.type) {\n      case GET_USERS:\n        return {...state, users: [...state.users, ...action.payload]}\n      case DELETE_USER:\n        return {...state, users: [...state.users.filter(item => item.id !== action.payload)]}\n      case ADD_USER: \n        return {...state, users: [...state.users.concat(action.payload)]}\n      case CHANGE_USER:\n        return {...state, users: [...state.users.map((item, arr) => {\n          if (item.id === action.payload.id) {\n            console.log(arr);\n            item = {\n              [item.name]: action.payload.name,\n              [item.email]: action.payload.email,\n              [item.id]: action.payload.id,\n            }\n          }\n        })]}\n      default:\n        return state\n    }\n}\n\n// [...state.users.map(item => {\n//   console.log(action.payload);\n  \n//   if (item.id === action.payload.id) {\n//     let {name, email, id} = action.payload\n//     console.log(name);\n//     item = (action.payload)\n//   }\n// })]}\n\n// arr.copyWithin(action.payload, i, i + 1)\n\n"]},"metadata":{},"sourceType":"module"}