{"ast":null,"code":"var _jsxFileName = \"/Users/demo/Desktop/takeoff/src/components/UserItem/UserItem.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toggleState } from '../../services/toggleState';\nimport { delUser, changeUser, getUsers } from '../../store/actions';\nimport Button from '../UI/Button/Button';\nimport Modal from \"../UI/Modal/Modal\";\nimport './UserItem.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserItem(_ref) {\n  _s();\n\n  let {\n    id,\n    name,\n    email,\n    changeStateOfModal\n  } = _ref;\n  const dispatch = useDispatch();\n  const [modal, setModal] = useState(false);\n  const users = useSelector(state => state.users.users);\n\n  const setUsers = () => {\n    users.find(item => item.id = id).name = 'asdf';\n    toggleState(setModal, modal);\n  };\n\n  const changeList = e => {\n    console.log(e.target.getAttribute('data-id'));\n    users.forEach(item => {\n      if (item.id === +e.target.getAttribute('data-id')) {\n        dispatch(changeUser(item.name = 213));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [modal ? /*#__PURE__*/_jsxDEV(Modal, {\n      modal: modal,\n      setModal: setModal,\n      changeStateOfModal: changeStateOfModal,\n      action: changeUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"list-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list-item-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"list-item__title\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"list-item__span\",\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          \"data-id\": id,\n          onClick: e => changeList(e),\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => dispatch(delUser(id)),\n          children: \"Del\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserItem, \"RuEhZ9vwumgT2bEQhCq5ehl5TFQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserItem\");","map":{"version":3,"sources":["/Users/demo/Desktop/takeoff/src/components/UserItem/UserItem.jsx"],"names":["useState","useDispatch","useSelector","toggleState","delUser","changeUser","getUsers","Button","Modal","UserItem","id","name","email","changeStateOfModal","dispatch","modal","setModal","users","state","setUsers","find","item","changeList","e","console","log","target","getAttribute","forEach"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,QAA9B,QAA8C,qBAA9C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,OAAO,gBAAP;;;AAEA,eAAe,SAASC,QAAT,OAA2D;AAAA;;AAAA,MAAzC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,KAAZ;AAAmBC,IAAAA;AAAnB,GAAyC;AACtE,QAAMC,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAMiB,KAAK,GAAGf,WAAW,CAACgB,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;;AAGA,QAAME,QAAQ,GAAG,MAAM;AACnBF,IAAAA,KAAK,CAACG,IAAN,CAAWC,IAAI,IAAIA,IAAI,CAACX,EAAL,GAAUA,EAA7B,EAAiCC,IAAjC,GAAwC,MAAxC;AACAR,IAAAA,WAAW,CAACa,QAAD,EAAWD,KAAX,CAAX;AACH,GAHD;;AAKA,QAAMO,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,SAAtB,CAAZ;AACAV,IAAAA,KAAK,CAACW,OAAN,CAAcP,IAAI,IAAI;AAClB,UAAIA,IAAI,CAACX,EAAL,KAAY,CAACa,CAAC,CAACG,MAAF,CAASC,YAAT,CAAsB,SAAtB,CAAjB,EAAmD;AAC/Cb,QAAAA,QAAQ,CAACT,UAAU,CAACgB,IAAI,CAACV,IAAL,GAAY,GAAb,CAAX,CAAR;AACH;AACJ,KAJD;AAKH,GAPD;;AASA,sBACI;AAAA,eACKI,KAAK,gBACA,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA,KAAd;AAAqB,MAAA,QAAQ,EAAEC,QAA/B;AAAyC,MAAA,kBAAkB,EAAEH,kBAA7D;AAAiF,MAAA,MAAM,EAAER;AAAzF;AAAA;AAAA;AAAA;AAAA,YADA,gBAEA,qCAHV,eAKI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,kBAAd;AAAA,oBAAkCM;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBAAmCC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACI,QAAC,MAAD;AAAQ,qBAASF,EAAjB;AAAqB,UAAA,OAAO,EAAGa,CAAD,IAAOD,UAAU,CAACC,CAAD,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,MAAMT,QAAQ,CAACV,OAAO,CAACM,EAAD,CAAR,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAkBH;;GAtCuBD,Q;UACHR,W,EAEHC,W;;;KAHMO,Q","sourcesContent":["import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { toggleState } from '../../services/toggleState'\nimport { delUser, changeUser, getUsers } from '../../store/actions'\nimport Button from '../UI/Button/Button'\nimport Modal from \"../UI/Modal/Modal\"\nimport './UserItem.css'\n\nexport default function UserItem({ id, name, email, changeStateOfModal }) {\n    const dispatch = useDispatch()\n    const [modal, setModal] = useState(false)\n    const users = useSelector(state => state.users.users)\n\n\n    const setUsers = () => {\n        users.find(item => item.id = id).name = 'asdf'\n        toggleState(setModal, modal)\n    }\n\n    const changeList = (e) => {\n        console.log(e.target.getAttribute('data-id'));\n        users.forEach(item => {\n            if (item.id === +e.target.getAttribute('data-id')) {\n                dispatch(changeUser(item.name = 213))\n            }\n        })\n    }\n\n    return (\n        <>\n            {modal\n                ? <Modal modal={modal} setModal={setModal} changeStateOfModal={changeStateOfModal} action={changeUser}/>\n                : <></>\n            }\n            < li className = \"list-item\" >\n                <div className=\"list-item-wrapper\">\n                    <h2 className=\"list-item__title\">{name}</h2>\n                    <span className=\"list-item__span\">{email}</span>\n                </div>\n                <div className=\"button-wrapper\">\n                    <Button data-id={id} onClick={(e) => changeList(e)}>Change</Button>\n                    <Button onClick={() => dispatch(delUser(id))}>Del</Button>\n                </div>\n            </li >\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}