{"ast":null,"code":"var _jsxFileName = \"/Users/demo/Desktop/takeoff/src/components/AuthForm/AuthForm.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAuth } from \"../../store/authReducer.ts\";\nimport './AuthForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AuthForm() {\n  _s();\n\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.users.users);\n  const [textInput, setTextInput] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    users.filter(item => {\n      if (textInput === item.email) {\n        dispatch(getAuth(true));\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => setTextInput(e.target.value),\n      type: \"email\",\n      placeholder: \"Email...\",\n      className: \"auth-form__input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"auth-form__button\",\n      children: \"\\u0412\\u043E\\u0439\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthForm, \"Y+19Ctwf6DSCdvyMyavWvn3kGBI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AuthForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"sources":["/Users/demo/Desktop/takeoff/src/components/AuthForm/AuthForm.jsx"],"names":["useState","useSelector","useDispatch","getAuth","AuthForm","dispatch","users","state","textInput","setTextInput","handleSubmit","e","preventDefault","filter","item","email","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAMI,KAAK,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,KAAN,CAAYA,KAAtB,CAAzB;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAEAN,IAAAA,KAAK,CAACO,MAAN,CAAaC,IAAI,IAAI;AACjB,UAAIN,SAAS,KAAKM,IAAI,CAACC,KAAvB,EAA8B;AAC1BV,QAAAA,QAAQ,CAACF,OAAO,CAAC,IAAD,CAAR,CAAR;AACH;AACJ,KAJD;AAKH,GARD;;AAUA,sBACI;AACI,IAAA,QAAQ,EAAEO,YADd;AAEI,IAAA,SAAS,EAAC,WAFd;AAAA,4BAII;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AACI,MAAA,QAAQ,EAAEC,CAAC,IAAIF,YAAY,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAD/B;AAEI,MAAA,IAAI,EAAC,OAFT;AAGI,MAAA,WAAW,EAAC,UAHhB;AAII,MAAA,SAAS,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,YALJ,eAYI;AAAQ,MAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GA/BuBb,Q;UACHF,W,EACHD,W;;;KAFMG,Q","sourcesContent":["import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { getAuth } from \"../../store/authReducer.ts\";\nimport './AuthForm.css'\n\nexport default function AuthForm() {\n    const dispatch = useDispatch()\n    const users = useSelector(state => state.users.users)\n    const [textInput, setTextInput] = useState('')\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        users.filter(item => {\n            if (textInput === item.email) {\n                dispatch(getAuth(true))\n            }\n        })\n    }\n\n    return (\n        <form\n            onSubmit={handleSubmit}\n            className=\"auth-form\"\n        >\n            <h1 className=\"title\">Введите email</h1>\n            <input\n                onChange={e => setTextInput(e.target.value)}\n                type=\"email\"\n                placeholder=\"Email...\"\n                className=\"auth-form__input\"\n            />\n\n            <button className=\"auth-form__button\">Войти</button>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}